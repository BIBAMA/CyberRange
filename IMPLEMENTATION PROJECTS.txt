DISA PROJECT-FIX

1. WN10-AU-000500
Windows Registry Editor Version 5.00

[HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\Eventlog\Application]
"MaxSize"=dword:00008000
.................................................

2. WN10-CC-000370 
If the following registry value does not exist or is not configured as specified, this is a finding.

Registry Hive: HKEY_LOCAL_MACHINE
Registry Path: \Software\Policies\Microsoft\Windows\System

Value Name: AllowDomainPINLogon
Value Type: REG_DWORD
Value data: 0
.............................
Disable the convenience PIN sign-in.

If this needs to be corrected configure the policy value for Computer Configuration >> Administrative Templates >> System >> Logon >> Set "Turn on convenience PIN sign-in" to "Disabled”.
......................................................................................................................................................................................

Set-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows\System" -Name "AllowDomainPINLogon" -Value 1 -Type DWord
.......................................................................................................................................


#
.SYNOPSIS
    This PowerShell script configure registry setting for PreventOverride

.NOTES
    Author          : Enoch Bibama
    LinkedIn        : linkedin.com/in/enochbibama/
    GitHub          : github.com/Enoch7791
    Date Created    : 2025-07-07
    Last Modified   : 2025-07-07
    Version         : 1.0
    CVEs            : N/A
    Plugin IDs      : N/A
    STIG-ID         : WN10-CC-000230

.TESTED ON
    Date(s) Tested  : 
    Tested By       : 
    Systems Tested  : 
    PowerShell Ver. : 

.USAGE
    Put any usage instructions here.
    Example syntax:
    PS C:\> (STIG-ID-WN10-CC-000230).ps1 
#>

 # PowerShell Script to configure registry setting for PreventOverride

# Define the registry path
$regPath = "HKLM:\SOFTWARE\Policies\Microsoft\MicrosoftEdge\PhishingFilter"

# Check if the path exists, if not create it
if (-not (Test-Path $regPath)) {
    New-Item -Path $regPath -Force
}

# Define the registry value
$regValue = "PreventOverride"
$regType = "DWORD"
$regData = 1  # 0x00000001 is equivalent to 1 in decimal

# Set the registry value
Set-ItemProperty -Path $regPath -Name $regValue -Value $regData -Type $regType

# Confirm the registry value is set correctly
Write-Host "Registry value PreventOverride set to $regData successfully."
.................................................................................................




#
.SYNOPSIS
    This PowerShell script configure registry setting for PreventOverride

.NOTES
    Author          : Enoch Bibama
    LinkedIn        : linkedin.com/in/enochbibama/
    GitHub          : github.com/Enoch7791
    Date Created    : 2025-07-08
    Last Modified   : 2025-07-08
    Version         : 1.0
    CVEs            : N/A
    Plugin IDs      : N/A
    STIG-ID         : WN10-SO-000230

.TESTED ON
    Date(s) Tested  : 
    Tested By       : 
    Systems Tested  : 
    PowerShell Ver. : 

.USAGE
    Put any usage instructions here.
    Example syntax:
    PS C:\> (STIG-ID-WN10-SO-000230).ps1 
#>

# PowerShell Script to enforce FIPS-compliant algorithms for encryption, hashing, and signing

# Define the registry path for FIPS compliance
$regPath = "HKLM:\SYSTEM\CurrentControlSet\Control\Lsa\FIPSAlgorithmPolicy"

# Check if the path exists
if (-not (Test-Path $regPath)) {
    # If the path doesn't exist, create it
    New-Item -Path $regPath -Force
    Write-Host "Created registry path for FIPSAlgorithmPolicy."
} else {
    Write-Host "Registry path for FIPSAlgorithmPolicy already exists."
}

# Define the registry value to enable FIPS compliance
$regValueName = "Enabled"
$regValueData = 1  # FIPS compliance enabled

# Set the registry value
Set-ItemProperty -Path $regPath -Name $regValueName -Value $regValueData -Type DWORD

# Confirm the registry change
Write-Host "Registry value for FIPS compliance (Enabled = 1) has been set successfully."

# Optionally, enable the Group Policy setting for FIPS compliance as well
# Enable FIPS-compliant algorithms via Local Group Policy

# Ensure the Group Policy setting is set to 'Enabled' for FIPS compliance
$gpoSetting = "Computer Configuration\Windows Settings\Security Settings\Local Policies\Security Options\System cryptography: Use FIPS compliant algorithms for encryption, hashing, and signing"
$gpoValue = "Enabled"

# Apply the policy setting (this requires administrative rights to run)
secedit /configure /cfg $gpoSetting /value $gpoValue
Write-Host "Group Policy for FIPS compliance has been configured."
........................................................................................................


#.SYNOPSIS
    This PowerShell Script to disable "Logoff Success" auditing policy

.NOTES
    Author          : Enoch Bibama
    LinkedIn        : linkedin.com/in/enochbibama/
    GitHub          : github.com/Enoch7791
    Date Created    : 2025-07-08
    Last Modified   : 2025-07-08
    Version         : 1.0
    CVEs            : N/A
    Plugin IDs      : N/A
    STIG-ID         : WN10-AU-000065

.TESTED ON
    Date(s) Tested  : 
    Tested By       : 
    Systems Tested  : 
    PowerShell Ver. : 

.USAGE
    Put any usage instructions here.
    Example syntax:
    PS C:\> (STIG-ID-WN10-AU-000065).ps1 

# PowerShell Script to disable "Logoff Success" auditing policy

# Define the registry path
$regPath = "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Audit"

# Check if the registry path exists
if (-not (Test-Path $regPath)) {
    # Create the path if it doesn't exist
    New-Item -Path $regPath -Force
    Write-Host "Registry path for auditing does not exist. Created it."
} else {
    Write-Host "Registry path for auditing already exists."
}

# Set the registry value to disable Logoff Success auditing
$regValueName = "AuditLogoff"
$regValueData = 0  # 0 means disabling the Logoff Success auditing

# Apply the registry change
Set-ItemProperty -Path $regPath -Name $regValueName -Value $regValueData -Type DWORD

# Confirm the registry change
Write-Host "Logoff Success auditing has been disabled successfully."
